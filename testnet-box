#!/usr/bin/env python

VERSION = "0.1"
BITCOIND = "bitcoind"

import sys, subprocess

def init(n):
    print ("init: %s boxes" % n)
    """
    for n:
        mkdir $n/testnet3
        cp data-template/testnet3/* $n/testnet3

        raw = load('data-template/bitcoin.conf')
        #do some magic on $n/bitcoin.conf
        port=( "19%s" % pad(N) )
        rpcport=( "18%s" % pad(N) )
        connects = ""
        for r in range(n-1):
            connects += ("connect=127.0.0.1:19%s\n" % pad(r) )

        raw.replace("###port###",port)
        raw.replace("###rpcport###",rpcport)
        raw.replace("###connects###",connects)

        save(raw,'$n/bitcoin.conf')

    """
    return

def clean(n):
    print ("clean: %s boxes" % n)
    """
    for n:
        rm -rf $n/
        
    """
    init(n)
    return

def start(n):
    print ("starting: %s boxes" % n)
    """
    for n:
        bitcoin(n,'-deamon',True)
    """
    return

def simulate(n):
    print ("simulating: %s boxes" % n)
    """
    address = {}
    for n:
        address[n] = bitcoin(n,'getnewaddress')

    while True:
        boxes = [:n]
        boxes.shuffle()
        from = boxes.pop();
        to = boxes.pop();
        amount = math.rand()
        bitcoin(from, ('sendtoaddress %s %s' % (address[to],amount)) )
        sleep 30
    """
    return

def bitcoin(id,cmd,deamon=False):
    datadir = ("-datadir=/home/wolf/code/bitcoin-testnet-box/%s" % id)
    call = [BITCOIND,datadir] + cmd
    subprocess.call(call)
    return

def getN(n):
    """
    so this will be like pythons range selector
    one box = 1
    range boxes = 2:4
    group = 1,3,5
    ground and range = 1,4:10,20:29

    """
    boxes = [1,2,4]
    start = 1
    #do we have commas

    #do we have ranges

    return n

def main():

    tnb_cmds = {'init':init,'clean':clean,'start':start,'simulate':simulate}
    btc_cmds = ['addmultisigaddress','backupwallet','createrawtransaction','decoderawtransaction','dumpprivkey','encryptwallet',
                'getaccount','getaccountaddress','getaddressesbyaccount','getbalance','getblock','getblockcount','getblockhash',
                'getblocktemplate','getconnectioncount','getdifficulty','getgenerate','gethashespersec','getinfo','getmininginfo',
                'getnewaddress','getpeerinfo','getrawmempool','getrawtransaction','getreceivedbyaccount','getreceivedbyaddress',
                'gettransaction','getwork','help','importprivkey','keypoolrefill','listaccounts','listaddressgroupings',
                'listreceivedbyaccount','listreceivedbyaddress','listsinceblock','listtransactions','listunspent','move','sendfrom',
                'sendmany','sendrawtransaction','sendtoaddress','setaccount','setgenerate','settxfee','signmessage',
                'signrawtransaction','stop','submitblock','validateaddress','verifymessage']
    if sys.argv[1] in tnb_cmds:
        print ("TESTNET-BOX v%s" % VERSION)

        n = getN(2)
        if len(sys.argv) >= 3:
            n = getN(sys.argv[2])

        tnb_cmds[sys.argv[1]](n)
    else:
        if sys.argv[1] in btc_cmds:
            #print "bitcoin command: ", sys.argv[1]
            bitcoin(1,sys.argv[1:])
        else:
            #print "is this an id?", sys.argv[1]
            if len(sys.argv) >= 3:
                #print "bitcoin command: ", sys.argv[2]
                bitcoin(sys.argv[1],sys.argv[2:])



    pass

if __name__ == "__main__":
    main()